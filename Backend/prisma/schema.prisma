generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int    @id @default(autoincrement())
  userAddress  String
  userContact  String
  userEmail    String @unique
  userName     String
  userPassword String
}

model HostelOwner {
  id             Int          @id @default(autoincrement())
  hostelName     String
  hostelLocation String
  ownerName      String
  email          String       @unique
  contact        String
  location       String
  address        String
  password       String
  description    String
  hostelRooms    HostelRoom[] // This is the bridge entity
}

model Room {
  id            Int       @id @default(autoincrement())
  roomNumber    String
  type          String
  price         Float
  capacity      Int
  description   String?
  amenities     String? // Changed to String? because you can store JSON-like strings or comma-separated values
  floor         Int?
  roomCondition String?
  dateAvailable DateTime?

  photos      RoomPhoto[] // Relation to RoomPhoto
  hostelRooms HostelRoom[] // This is the bridge entity

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model RoomPhoto {
  id     Int    @id @default(autoincrement())
  url    String
  roomId Int
  room   Room   @relation(fields: [roomId], references: [id])

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model HostelRoom {
  id            Int         @id @default(autoincrement())
  hostelOwnerId Int
  roomId        Int
  hostelOwner   HostelOwner @relation(fields: [hostelOwnerId], references: [id])
  room          Room        @relation(fields: [roomId], references: [id])

  @@unique([hostelOwnerId, roomId])
}
